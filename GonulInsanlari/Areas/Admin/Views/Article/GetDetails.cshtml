@using EntityLayer
@model Article

@{
    ViewData["Title"] = "GetDetails";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="wrapper wrapper-content  animated fadeInRight article">
    <div class="row justify-content-md-center">
        <div class="col-lg-10">
            <div class="ibox">
                <div class="ibox-content">
                    <div style="margin-bottom:25px;" class="text-center article-title">
                        <span class="text-muted"><i class="fa fa-clock-o"></i> @Model.Created.ToString("MMM-dd-yyyy")</span>
                        <h1 style="margin-bottom:40px;">
                            @Model.Title
                        </h1>
                      
                        @if (Model.Videos != null)
                        {
                            @foreach (var video in Model.Videos)
                            {
                                if (ViewBag.IsUrl==false)
                                {
                                    <video src="~/Images/@ViewBag.Path" controls width="%95" height="200"></video>
                                }
                                if (ViewBag.IsUrl == true)
                                {
                                    <center>
                                        <iframe width="100%" height="800" src="@ViewBag.Path" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                                    </center>
                                }

                            }

                        }
                    
                 <div>
                     <p style="margin-top:50px;">
                        @Html.Raw(@Model.Content)
                    </p>
         <h5  style="padding-top:20px;" class="float-left">Published by @@@Model.AppUser.UserName</h5>
                    
                    <hr>

                    @await Component.InvokeAsync("GetCommentsByArticle",Model.ArticleID)

                </div>
            </div>
        </div>
    </div>

    </div>
    </div>
</div>